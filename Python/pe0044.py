# Project Euler
# Pentagon Numbers
# Problem 44
# https://projecteuler.net/problem=44
#
# """
# Pentagonal numbers are generated by the formula, P[n]=n(3n−1)/2. The first ten pentagonal numbers are:
# 
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
# 
# It can be seen that P[4] + P[7] = 22 + 70 = 92 = P[8]. However, their difference, 70 − 22 = 48, is not pentagonal.
# 
# Find the pair of pentagonal numbers, P[j] and P[k], for which their sum and difference are pentagonal and D = |P[k] − P[j]| is minimised; what is the value of D?
# """
def pentagonal(n):
    return int(n * (3 * n - 1) / 2)

def find_min_difference(limit):
    pentagonal_numbers = set()
    for i in range(1, limit + 1):
        pentagonal_numbers.add(pentagonal(i))
    min_difference = 1_000_000
    
    for j in range(1, limit + 1):
        pj = pentagonal(j)
        for k in range(j + 1, limit + 1):
            pk = pentagonal(k)
            
            if ((pk+pj) in pentagonal_numbers) and ((pk-pj) in pentagonal_numbers):
                if (pj-pk) < min_difference:
                    min_difference = (pk-pj)
                    
    return min_difference

print(find_min_difference(5_000))