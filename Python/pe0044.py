# Project Euler
# Pentagon Numbers
# Problem 44
# https://projecteuler.net/problem=44
#
# """
# Pentagonal numbers are generated by the formula, P[n]=n(3n−1)/2. The first ten pentagonal numbers are:
# 
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
# 
# It can be seen that P[4] + P[7] = 22 + 70 = 92 = P[8]. However, their difference, 70 − 22 = 48, is not pentagonal.
# 
# Find the pair of pentagonal numbers, P[j] and P[k], for which their sum and difference are pentagonal and D = |P[k] − P[j]| is minimised; what is the value of D?
# """

import math

def is_pentagonal(x):
    if x < 0:
        return False
    try:
        x = (math.sqrt(24 * x + 1) + 1) / 6
        return x.is_integer()
    except:
        return False

def pentagonal(term):
    return(term*(3*term - 1) // 2)

def solve():
    min_diff = 100_000
    i = 1
    while True:
        pent_i = pentagonal(i)
        for j in range(i - 1, 0, -1):
            pent_j = pentagonal(j)
            sum_ = pent_i + pent_j
            diff = pent_i - pent_j
            if is_pentagonal(sum_) and is_pentagonal(diff):
                if diff < min_diff:
                    min_diff = diff
        if i > 10000:
          break # to prevent infinite loop in some cases
        i += 1
    return min_diff

print(solve())